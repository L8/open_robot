package com.openrobot.common;

import java.io.ByteArrayOutputStream;
import java.io.IOException;


import android.graphics.Rect;
import android.hardware.Camera;
import android.hardware.Camera.Parameters;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.SurfaceHolder.Callback;

/**
 * Source below is a modified a modified version of RobotEyes project by Charles L. Chen
 * 
 */

public class CameraPreviewFeed implements Callback {
	 	
	private SurfaceHolder mHolder;

	    private SurfaceView mPreview;

	    private Camera mCamera;

	    private boolean mTorchMode;

	    private Rect r;

	    private int previewHeight = 0;

	    private int previewWidth = 0;

	    private int previewFormat = 0;

	    private byte[] mCallbackBuffer;

	    private ByteArrayOutputStream out;

	    
	    public CameraPreviewFeed(SurfaceView surfaceView) {
	    	 mPreview = surfaceView;
	         mHolder = mPreview.getHolder();
	         mHolder.addCallback(this);
	         mHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
	    }
	    
	    
		@Override
		public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void surfaceCreated(SurfaceHolder holder) {
			 mCamera = Camera.open();
		        try {
		            mCamera.setPreviewDisplay(holder);
		        } catch (IOException e) {
		            e.printStackTrace();
		        }
			
		}

		@Override
		public void surfaceDestroyed(SurfaceHolder arg0) {
			  mCamera.stopPreview();
		        mCamera.release();
		        mCamera = null;
		}
		
		public void setTorchMode(boolean on) {
	        if (mCamera != null) {
	            Parameters params = mCamera.getParameters();
	            if (on) {
	                params.setFlashMode(Parameters.FLASH_MODE_TORCH);
	            } else {
	                params.setFlashMode(Parameters.FLASH_MODE_AUTO);
	            }
	            mTorchMode = on;
	            mCamera.setParameters(params);
	        }
	    }
}
